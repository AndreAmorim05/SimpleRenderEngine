
add_executable(SRE-Spinning-Cube spinning-cube.cpp)
add_executable(SRE-Spinning-Primitives-Tex spinning-primitives-tex.cpp)
add_executable(SRE-Hello-Engine hello-engine.cpp)
add_executable(SRE-GUI gui.cpp)
add_executable(SRE-Spheres spheres.cpp)
add_executable(SRE-Benchmark64k benchmark64k.cpp)
add_executable(SRE-Picking picking.cpp)
add_executable(SRE-RenderToTexture render-to-texture.cpp)
add_executable(SRE-ObjViewer obj-viewer.cpp)
add_executable(SRE-Hello-Engine-Raw hello-engine-raw.cpp)
add_executable(SRE-Sprite sprite-example.cpp)
add_executable(SRE-CustomMeshLayout custom-mesh-layout.cpp)

target_link_libraries(SRE-Spinning-Cube ${EXTRA_LIBS} ${SDL2_LIBRARY} ${SDL2_IMAGE_LIBRARIES}  ${OPENVR_LIB} SRE)
target_link_libraries(SRE-Spinning-Primitives-Tex ${EXTRA_LIBS} ${SDL2_LIBRARY} ${SDL2_IMAGE_LIBRARIES} ${OPENVR_LIB} SRE)
target_link_libraries(SRE-Hello-Engine ${EXTRA_LIBS} ${SDL2_LIBRARY} ${SDL2_IMAGE_LIBRARIES} ${OPENVR_LIB} SRE)
target_link_libraries(SRE-GUI ${EXTRA_LIBS} ${SDL2_LIBRARY} ${SDL2_IMAGE_LIBRARIES} ${OPENVR_LIB} SRE)
target_link_libraries(SRE-Spheres ${EXTRA_LIBS} ${SDL2_LIBRARY} ${SDL2_IMAGE_LIBRARIES} ${OPENVR_LIB} SRE)
target_link_libraries(SRE-Benchmark64k ${EXTRA_LIBS} ${SDL2_LIBRARY} ${SDL2_IMAGE_LIBRARIES} ${OPENVR_LIB} SRE)
target_link_libraries(SRE-Picking ${EXTRA_LIBS} ${SDL2_LIBRARY} ${SDL2_IMAGE_LIBRARIES} ${OPENVR_LIB} SRE)
target_link_libraries(SRE-RenderToTexture ${EXTRA_LIBS} ${SDL2_LIBRARY} ${SDL2_IMAGE_LIBRARIES} ${OPENVR_LIB} SRE)
target_link_libraries(SRE-ObjViewer ${EXTRA_LIBS} ${SDL2_LIBRARY} ${SDL2_IMAGE_LIBRARIES} ${OPENVR_LIB} SRE)
target_link_libraries(SRE-Hello-Engine-Raw ${EXTRA_LIBS} ${SDL2_LIBRARY} ${SDL2_IMAGE_LIBRARIES} ${OPENVR_LIB} SRE)
target_link_libraries(SRE-Sprite ${EXTRA_LIBS} ${SDL2_LIBRARY} ${SDL2_IMAGE_LIBRARIES} ${OPENVR_LIB} SRE)
target_link_libraries(SRE-CustomMeshLayout ${EXTRA_LIBS} ${SDL2_LIBRARY} ${SDL2_IMAGE_LIBRARIES} ${OPENVR_LIB} SRE)

file(COPY ../examples_data DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/Debug)
file(COPY ../examples_data DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/Release)

IF (WIN32)
    SET(SDL2_dll "" CACHE STRING "Where the SDL2.dll can be found")
    SET(SDL2_image_lib_path "" CACHE PATH "Where the SDL2_image.dll can be found")
    SET(DLLFileList "${SDL2_image_lib_path}/SDL2_image.dll" "${SDL2_image_lib_path}/libjpeg-9.dll" "${SDL2_image_lib_path}/libpng16-16.dll" "${SDL2_image_lib_path}/libtiff-5.dll" "${SDL2_image_lib_path}/libwebp-7.dll" "${SDL2_image_lib_path}/zlib1.dll"  ${SDL2_dll})
	IF (USE_OPENVR)	
		SET(DLLFileList "${DLLFileList}" "${OPENVR_ROOT_DIR}/bin/${OPENVR_PLATFORM}/openvr_api.dll")
	ENDIF (USE_OPENVR)
    file(COPY ${DLLFileList} DESTINATION Debug)
    file(COPY ${DLLFileList} DESTINATION Release)
ENDIF(WIN32)
